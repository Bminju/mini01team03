<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mini01team03.user.model.UserDAO">
	<!--  resultMap database의 column 과 resultType에 해당하는 VO의 필드명이 
	다를 경우 매핑 시켜준다. primary key에 대한 필드는 id로 나머지는 result 로 지정한다.-->
 <!-- <resultMap type="UserVO" id="userMap">
      <result property="userid" column="Userid"/>
      <result property="userpwd" column="Userpwd"/>
      <result property="username" column="Username"/>
      <result property="email" column="Email"/>
   </resultMap>  -->
   
	<!-- 기본 로그인 -->
	<select id="getLoginInfo" parameterType="string" resultType="UserVO">
	SELECT Userid,Userpwd,Email,Username,Id,Role
	FROM user
	WHERE Userid = #{userid}
	</select>
	
	<!-- 카카오 로그인 -->
	<insert id="insertKaProfile" parameterType="KuserVO">
   insert into user(Userid, Userpwd, Username, Email, Role) values (#{userid}, #{userpwd}, #{username}, #{email}, #{role})
   </insert>
	
	<!-- 회원가입 -->
	<insert id="insertUser" parameterType="UserVO">
   insert into user(Userid, Userpwd, Username, Email, Role) values (#{userid}, #{userpwd}, #{username}, #{email}, #{role})
   </insert>
   
   <!-- 아이디 중복체크 -->
   <select id="userIdchk" parameterType="UserVO" resultType="int">
	SELECT count(*)
	FROM user
	WHERE Userid = #{userid}
	</select>
	
	<!-- 아이디 찾기 --> 
	<select id="findid" parameterType="UserVO" resultType="String">
	SELECT Userid FROM user
	<where> 
	<if test="username != null">AND Username = #{username}</if>
	<if test="email != null">AND Email = #{email}</if>
	</where>
	</select>
	
	<!-- 비밀번호 변경 >  -->
	<select id="findPwd" parameterType="UserVO" resultType="UserVO">
		SELECT Email,Username,Id FROM user
		<where> 
			<if test="username != null">AND Username = #{username}</if>
			<if test="email != null">AND Email = #{email}</if>
		</where>
	</select>
	
	<select id="findUserByUserId" parameterType="String" resultType="UserVO">
	SELECT Userpwd,Username,Id
	FROM user
	WHERE Email = #{email}
	</select>
	<!-- 회원정보 수정 -->
	<update id="updateUserpwd" parameterType="UserVO">
		UPDATE user
		<set>
		 <if test="userpwd != null">
		 	Userpwd = #{userpwd},
		 </if>
		 <if test="username != null">
		 	Username = #{username}
		 </if>
		</set>
		Where
		Id = #{id}
	</update>
	<!-- 회원정보 삭제 -->
	<delete id="userinfoDelete" parameterType="UserVO">
		DELETE FROM user 
		WHERE Userid = #{userid}
	</delete>
	
   <!-- 이메일 중복체크 -->
   
   <insert id="insertGaProfile" parameterType="GuserVO">
   insert into user(Userid, Userpwd, Username, Email, Role) values (#{userid}, #{userpwd}, #{username}, #{email}, #{role})
   </insert>
   
   <!-- 구글 로그인 -->
	<select id="findByUserid" parameterType="string" resultType="GuserVO">
	SELECT Userid,Userpwd,Email,Username,Id,Role
	FROM user
	WHERE Userid = #{userid}
	</select>
</mapper>