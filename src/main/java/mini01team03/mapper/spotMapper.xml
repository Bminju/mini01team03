<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mini01team03.spot.model.SpotDAO">
   <!--  resultMap database의 column 과 resultType에 해당하는 VO의 필드명이 
   다를 경우 매핑 시켜준다. primary key에 대한 필드는 id로 나머지는 result 로 지정한다.-->
   <resultMap type="MarkerVO" id="spotMap">
      <id property="id" column="Id"/>
      <result property="title" column="LO_name"/>
      <result property="address" column="Address"/>
      <result property="la" column="Lat"/>
      <result property="ma" column="Lon"/>
      <result property="price" column="Price"/>
      <result property="cate" column="Cate"/>
   </resultMap>
   
    <resultMap type="ListVO" id="beforelist">
      <id property="id" column="no"/>
      <result property="title" column="store"/>
      <result property="address" column="address"/>
      <result property="start" column="startDay"/>
      <result property="end" column="endDay"/>
   </resultMap>
   
   <insert id="insertSpot" parameterType="MarkerVO">
      insert into spot(Lo_name, Address, Lat, Lon, Price, Cate) values (#{title}, #{address}, #{la}, #{ma}, #{price}, #{cate})
   </insert>
	
   <insert id="insertBeforeList" parameterType="ListVO">
   	  insert into beforeinfo(store, address, cate, startDay, startTime, endDay, endTime, Userid, travel_title) values (#{store}, #{address}, #{cate}, #{startDay}, #{startTime}, #{endDay}, #{endTime}, #{Userid.userid}, #{travel})
   </insert>
   
   <select id="getAddress" resultType="ListVO" parameterType="ListVO">
   	select A.id, concat(A.store,'\n', A.address,'\n', A.cate)as title, concat(A.startDay, 'T', substr(A.startTime,1,8)) as start, 
   	concat(A.endDay, 'T', substr(A.endTime,1,8)) as end, A.price 
   	from beforeinfo AS A left join user AS B on A.Userid = B.Userid 
   	where B.Userid = #{Userid.userid} and A.travel_title = #{travel}
   	</select>
   	 <!-- concat은 두 값을 합치는것이고, substr한 이유는 8번째 이후 값이 있으면 오작동해서 이후값 버림. -->
    
    <!-- 블록 클릭시 price 값을 입력받아 update 한다. -->
   <update id="updatePrice" parameterType="ListVO">
    update beforeinfo set price = #{price} where Userid=#{Userid.userid} and id=#{id}
   </update>
   
   <insert id="insertTotalPrice" parameterType="TotalVO">
   	  insert into cost(travel_title, total, Userid) values (#{travel}, #{total}, #{Userid.userid})
   </insert>
   <!-- beforeinfo의 중복 방지를 위한 delete -->
   <delete id="beforeinfoDelete" parameterType="ListVO">
		DELETE FROM beforeinfo 
		WHERE Userid = #{Userid.userid} AND travel_title = #{travel}
	</delete>
   <!-- cost의 중복 방지를 위한 delete -->
   <delete id="costDelete" parameterType="TotalVO">
		DELETE FROM cost 
		WHERE Userid = #{Userid.userid} AND travel_title = #{travel}
	</delete>
	<!-- drop box에 입력 될 travel_title 가져오는 맵핑 -->
	<select id="travelList" resultType="TotalVO" parameterType="String">
			select travel_title as travel from cost where userid = #{userid}
	</select>
    <!-- total cost 가져오는 맵핑 -->
    <select id="findCost" resultType="String" parameterType="TotalVO">
    	select total from cost WHERE Userid = #{Userid.userid} AND travel_title = #{travel}
    </select>
   
   
   
</mapper>